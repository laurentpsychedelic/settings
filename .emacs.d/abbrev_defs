;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'Custom-mode-abbrev-table '())

(define-abbrev-table 'awk-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'bibtex-mode-abbrev-table '())

(define-abbrev-table 'c++-mode-abbrev-table
  '(
    ("#e" "#endif /* */" my-abbrev-hook 0)
    ("#i" "#include \"\"" my-abbrev-hook 0)
    ("#ifd" "#ifdef" nil 0)
    ("#ifn" "#ifndef" nil 0)
    ("#s" "#include <>" my-abbrev-hook 0)
    ("imain" "int main(int ac, char **av[]) {

}" my-abbrev-hook 0)
   ))

(define-abbrev-table 'c-mode-abbrev-table
  '(
    ("#e" "#endif /* */" my-abbrev-hook 0)
    ("#i" "#include \"\"" my-abbrev-hook 0)
    ("#ifd" "#ifdef" nil 0)
    ("#ifn" "#ifndef" nil 0)
    ("#s" "#include <>" my-abbrev-hook 0)
    ("imain" "int main(int ac, char **av[]) {

}" my-abbrev-hook 0)
   ))

(define-abbrev-table 'calendar-mode-abbrev-table '())

(define-abbrev-table 'change-log-mode-abbrev-table '())

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'conf-colon-mode-abbrev-table '())

(define-abbrev-table 'conf-javaprop-mode-abbrev-table '())

(define-abbrev-table 'conf-ppd-mode-abbrev-table '())

(define-abbrev-table 'conf-space-mode-abbrev-table '())

(define-abbrev-table 'conf-unix-mode-abbrev-table '())

(define-abbrev-table 'conf-windows-mode-abbrev-table '())

(define-abbrev-table 'conf-xdefaults-mode-abbrev-table '())

(define-abbrev-table 'csharp-mode-abbrev-table '())

(define-abbrev-table 'diary-fancy-display-mode-abbrev-table '())

(define-abbrev-table 'diary-mode-abbrev-table '())

(define-abbrev-table 'diff-mode-abbrev-table '())

(define-abbrev-table 'direx:direx-mode-abbrev-table '())

(define-abbrev-table 'doctex-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'gdb-breakpoints-mode-abbrev-table '())

(define-abbrev-table 'gdb-disassembly-mode-abbrev-table '())

(define-abbrev-table 'gdb-frames-mode-abbrev-table '())

(define-abbrev-table 'gdb-locals-mode-abbrev-table '())

(define-abbrev-table 'gdb-memory-mode-abbrev-table '())

(define-abbrev-table 'gdb-registers-mode-abbrev-table '())

(define-abbrev-table 'gdb-script-mode-abbrev-table '())

(define-abbrev-table 'gdb-threads-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("$soft_tpye" "type" nil 1)
    ("absrtact" "abstract" nil 3)
    ("abstart" "abstract" nil 2)
    ("addmosuse" "addMouse" nil 1)
    ("ahrd" "hard" nil 1)
    ("algirithm" "algorithm" nil 1)
    ("alurent" "laurent" nil 1)
    ("anaysis" "analysis" nil 1)
    ("antr" "and" nil 1)
    ("apped" "append" nil 1)
    ("aprameters" "parameters" nil 1)
    ("araial" "Arial" nil 1)
    ("asbtract" "abstract" nil 1)
    ("aseert" "assert" nil 1)
    ("astablished" "established" nil 1)
    ("astring" "string" nil 1)
    ("atatic" "static" nil 1)
    ("atuo" "AUTO" nil 1)
    ("auot" "auto" nil 1)
    ("autio" "AUTO" nil 1)
    ("axample" "example" nil 1)
    ("aythor" "author" nil 1)
    ("backgound" "background" nil 1)
    ("beenn" "been" nil 1)
    ("befire" "before" nil 1)
    ("boject" "object" nil 1)
    ("bollean" "boolean" nil 1)
    ("booean" "boolean" nil 1)
    ("boolran" "boolean" nil 1)
    ("bould" "bound" nil 1)
    ("bracnhes" "branches" nil 1)
    ("bufer" "buffer" nil 1)
    ("cakculation" "Calculation" nil 1)
    ("calcualte" "calculate" nil 1)
    ("calss" "class" nil 1)
    ("calue" "value" nil 1)
    ("camerasfrmae" "cameraframe" nil 1)
    ("casncelled" "cancelled" nil 1)
    ("castch" "catch" nil 1)
    ("cehckout" "checkout" nil 1)
    ("chich" "which" nil 1)
    ("childern" "children" nil 1)
    ("chweck" "check" nil 1)
    ("cinlude" "include" nil 1)
    ("cintroller" "controller" nil 1)
    ("ciontents" "contents" nil 1)
    ("circvle" "Circle" nil 1)
    ("classpaht" "classpth" nil 1)
    ("classpth" "classpath" nil 1)
    ("cleints" "clients" nil 1)
    ("cluase" "clause" nil 1)
    ("cnost" "const" nil 1)
    ("coinstructor" "constructor" nil 1)
    ("cointainer" "container" nil 1)
    ("colroing" "coloring" nil 1)
    ("comaprator" "Comparator" nil 1)
    ("comapring" "Comparing" nil 1)
    ("comlpete" "complete" nil 1)
    ("commnet" "comment" nil 1)
    ("complte" "complete" nil 1)
    ("compoennt" "component" nil 1)
    ("comst" "const" nil 1)
    ("condt" "const" nil 1)
    ("consctructor" "constructor" nil 1)
    ("constasnt" "constant" nil 1)
    ("constrcutor" "constructor" nil 2)
    ("construcotr" "constructor" nil 2)
    ("construfctor" "constructor" nil 1)
    ("construtor" "constructor" nil 1)
    ("consturctor" "constructor" nil 1)
    ("contaienr" "container" nil 1)
    ("contaner" "container" nil 1)
    ("contant" "constant" nil 1)
    ("contructor" "constructor" nil 2)
    ("contsiner" "container" nil 1)
    ("coreection" "correction" nil 1)
    ("correciton" "correction" nil 1)
    ("correctr" "correct" nil 1)
    ("creaet" "create" nil 1)
    ("ctach" "catch" nil 7)
    ("curetn" "current" nil 1)
    ("cysstrt" "cygstart" nil 1)
    ("dara" "DATA" nil 1)
    ("defautl" "default" nil 3)
    ("defore" "before" nil 1)
    ("deicsion" "decision" nil 2)
    ("deomat" "format" nil 1)
    ("dield" "field" nil 2)
    ("dilaog" "dialog" nil 1)
    ("dimensuion" "Dimension" nil 1)
    ("dipskay" "display" nil 1)
    ("directino" "direction" nil 1)
    ("directorry" "directory" nil 1)
    ("dirve" "drive" nil 1)
    ("documentatin" "documentation" nil 1)
    ("docus" "focus" nil 2)
    ("dound" "found" nil 1)
    ("dpne" "done" nil 1)
    ("eamcs" "emacs" nil 1)
    ("echp" "echo" nil 1)
    ("ecxists" "exists" nil 1)
    ("ehile" "while" nil 1)
    ("eith" "with" nil 1)
    ("ekse" "else" nil 1)
    ("ellispe" "ellipse" nil 1)
    ("enablle" "enable" nil 1)
    ("enam" "enum" nil 1)
    ("enbdif" "endif" nil 1)
    ("enw" "new" nil 1)
    ("epislon" "epsilon" nil 1)
    ("eppend" "append" nil 4)
    ("esle" "else" nil 1)
    ("excepiton" "Exception" nil 1)
    ("exceptino" "Exception" nil 3)
    ("exception" "exception" nil 16)
    ("exceptionhander" "ExceptionHandler" nil 1)
    ("excpetion" "Exception" nil 4)
    ("excpetions" "Exception" nil 2)
    ("exectue" "execute" nil 1)
    ("exectution" "execution" nil 1)
    ("executalbe" "executable" nil 1)
    ("exsception" "Exception" nil 1)
    ("exsits" "exists" nil 1)
    ("extedns" "extends" nil 1)
    ("exti" "exit" nil 1)
    ("extrnsion" "extension" nil 1)
    ("exvcept" "except" nil 1)
    ("faieldg" "Failed" nil 1)
    ("falot" "float" nil 1)
    ("falswe" "false" nil 1)
    ("fgunction" "function" nil 1)
    ("fianl" "final" nil 1)
    ("fiedl" "field" nil 4)
    ("fiel" "file" nil 2)
    ("fielanem" "filename" nil 1)
    ("fielanme" "filename" nil 1)
    ("fielapth" "filepath" nil 1)
    ("fielpath" "filepath" nil 1)
    ("fiels" "files" nil 1)
    ("fikes" "files" nil 1)
    ("filder" "folder" nil 1)
    ("filehandlker" "FileHandler" nil 1)
    ("filepaht" "filepath" nil 1)
    ("filepth" "filepath" nil 1)
    ("filer" "filter" nil 1)
    ("fileter" "filter" nil 1)
    ("fillfiedls" "fillFields" nil 1)
    ("firestrom" "firestorm" nil 1)
    ("fitlker" "filters" nil 1)
    ("fiueld" "field" nil 1)
    ("flase" "false" nil 1)
    ("flepath" "filepath" nil 1)
    ("flloat" "float" nil 1)
    ("flost" "float" nil 1)
    ("flowlaytout" "flowlayout" nil 1)
    ("foint" "font" nil 1)
    ("folat" "Float" nil 1)
    ("fomratter" "Formatter" nil 1)
    ("fomt" "Font" nil 1)
    ("forground" "foreground" nil 1)
    ("format" "Format" nil 8)
    ("found" "found" nil 5)
    ("fpirntf" "fprintf" nil 1)
    ("fraem" "frame" nil 1)
    ("fraemwork" "framework" nil 1)
    ("frequenec" "frequence" nil 1)
    ("frmae" "frame" nil 1)
    ("froeach" "foreach" nil 1)
    ("fromat" "Format" nil 1)
    ("frsame" "Frame" nil 1)
    ("fsxtory" "factory" nil 1)
    ("fucntion" "function" nil 1)
    ("funcition" "function" nil 1)
    ("functiosn" "functions" nil 1)
    ("galse" "false" nil 1)
    ("geenrate" "generate" nil 1)
    ("gertenv" "getenv" nil 1)
    ("getmeassge" "getMessage" nil 1)
    ("getmetry" "Geometry" nil 1)
    ("getstirng" "getString" nil 1)
    ("grahpcis" "graphics" nil 1)
    ("grahpics" "graphics" nil 1)
    ("grpahics" "Graphics" nil 2)
    ("hashmap;

/**
 * " "obtain" nil 0)
    ("hava" "java" nil 1)
    ("heigth" "height" nil 3)
    ("histroy" "history" nil 1)
    ("hoem" "HOME" nil 1)
    ("hsell" "shell" nil 1)
    ("hte" "the" nil 1)
    ("huor" "hour" nil 1)
    ("iamin" "imain" nil 1)
    ("idel" "idle" nil 1)
    ("ierate" "iterate" nil 1)
    ("ierator" "iterator" nil 1)
    ("ietrate" "iterate" nil 1)
    ("imiport" "import" nil 1)
    ("impiort" "import" nil 1)
    ("implemements" "implements" nil 1)
    ("implemens" "implements" nil 1)
    ("impoirt" "import" nil 1)
    ("imporrt" "import" nil 1)
    ("impot" "import" nil 1)
    ("improt" "import" nil 12)
    ("inclde" "include" nil 1)
    ("incldue" "include" nil 1)
    ("indetn" "indent" nil 1)
    ("indlide" "include" nil 1)
    ("inffo" "info" nil 1)
    ("infromation" "information" nil 1)
    ("inlcude" "include" nil 1)
    ("inly" "only" nil 1)
    ("inport" "import" nil 1)
    ("inr" "int" nil 2)
    ("instane" "instance" nil 1)
    ("interactove" "interactive" nil 1)
    ("intvectro" "intVector" nil 1)
    ("ir" "or" nil 2)
    ("iregistry" "rtegistry" nil 0)
    ("isswitch" "iswitch" nil 1)
    ("itmeem" "item" nil 1)
    ("iumport" "import" nil 2)
    ("javacx" "javax" nil 1)
    ("javaw" "javax" nil 1)
    ("jcheckbow" "jCheckBox" nil 1)
    ("jfrmae" "JFrame" nil 1)
    ("jpnale" "jPanel" nil 1)
    ("langage" "language" nil 2)
    ("langauge" "language" nil 1)
    ("langauges" "languages" nil 1)
    ("langfuages" "LANGUAGES" nil 1)
    ("langyuage" "language" nil 1)
    ("ledt" "LEFT" nil 1)
    ("lese" "else" nil 1)
    ("linekd" "Linked" nil 1)
    ("ling" "long" nil 1)
    ("linkedlsit" "LinkedList" nil 3)
    ("llc" "linked_list_copy" nil 3)
    ("llocation" "location" nil 1)
    ("locastion" "location" nil 3)
    ("locationjs" "locations" nil 1)
    ("lqast" "last" nil 1)
    ("maht" "Math" nil 1)
   ))

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'idl-mode-abbrev-table '())

(define-abbrev-table 'java-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'log-edit-mode-abbrev-table '())

(define-abbrev-table 'magit-branch-manager-mode-abbrev-table '())

(define-abbrev-table 'magit-commit-mode-abbrev-table '())

(define-abbrev-table 'magit-diff-mode-abbrev-table '())

(define-abbrev-table 'magit-log-edit-mode-abbrev-table '())

(define-abbrev-table 'magit-log-mode-abbrev-table '())

(define-abbrev-table 'magit-reflog-mode-abbrev-table '())

(define-abbrev-table 'magit-stash-mode-abbrev-table '())

(define-abbrev-table 'magit-status-mode-abbrev-table '())

(define-abbrev-table 'magit-wazzup-mode-abbrev-table '())

(define-abbrev-table 'objc-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'org-mode-abbrev-table '())

(define-abbrev-table 'outline-mode-abbrev-table '())

(define-abbrev-table 'package-menu-mode-abbrev-table '())

(define-abbrev-table 'pike-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'scilab-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'snippet-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

